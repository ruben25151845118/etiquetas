name: Deploy Jupyter Notebook to Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Jupyter
      run: |
        pip install jupyter nbconvert[webpdf]
        
    - name: Create docs directory
      run: mkdir -p docs
        
    - name: Clean and convert notebooks to HTML
      run: |
        # Install additional tools
        pip install nbstripout
        
        # Clean and convert all .ipynb files to HTML
        for notebook in *.ipynb; do
          if [ -f "$notebook" ]; then
            echo "Cleaning and converting $notebook"
            
            # Clean the notebook
            python -c "
import json
import sys

filename = '$notebook'
try:
    with open(filename, 'r', encoding='utf-8') as f:
        nb = json.load(f)
    
    # Remove problematic metadata
    if 'metadata' in nb and 'widgets' in nb['metadata']:
        del nb['metadata']['widgets']
    
    # Clean cell metadata
    if 'cells' in nb:
        for cell in nb['cells']:
            if 'metadata' in cell:
                problematic_keys = ['colab', 'executionInfo', 'outputId']
                for key in problematic_keys:
                    if key in cell['metadata']:
                        del cell['metadata'][key]
    
    # Save cleaned notebook
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(nb, f, indent=2)
    
    print(f'Cleaned {filename}')
except Exception as e:
    print(f'Error cleaning {filename}: {e}')
"
            
            # Convert to HTML
            jupyter nbconvert --to html --output-dir=docs "$notebook" || echo "Failed to convert $notebook, but continuing..."
          fi
        done
        
    - name: Create index page
      run: |
        cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Mis Notebooks</title>
            <meta charset="UTF-8">
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                h1 { color: #333; }
                .notebook { 
                    background: #f5f5f5; 
                    padding: 15px; 
                    margin: 10px 0; 
                    border-radius: 5px; 
                }
                .notebook a { 
                    text-decoration: none; 
                    color: #0066cc; 
                    font-weight: bold; 
                }
            </style>
        </head>
        <body>
            <h1>ðŸ“š Mis Jupyter Notebooks</h1>
        EOF
        
        # Add links to all HTML files
        for html in docs/*.html; do
          if [ -f "$html" ] && [ "$(basename "$html")" != "index.html" ]; then
            filename=$(basename "$html")
            name="${filename%.*}"
            echo "<div class='notebook'>" >> docs/index.html
            echo "<a href='$filename'>ðŸ““ $name</a>" >> docs/index.html
            echo "</div>" >> docs/index.html
          fi
        done
        
        echo "</body></html>" >> docs/index.html
        
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
